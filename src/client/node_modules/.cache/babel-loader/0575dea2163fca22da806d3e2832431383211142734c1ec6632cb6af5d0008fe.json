{"ast":null,"code":"var _jsxFileName = \"/Users/anansi/Workspace/personal/chesschat/src/client/src/components/comments.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CommentSection(currentMove) {\n  _s();\n  const [comment, setComment] = useState({\n    \"content\": content,\n    \"title\": title,\n    \"move\": currentMove\n  });\n  // state object needs to match the same structure as the object you are trying to save to state\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const postUrl = 'http://localhost:3001/post';\n    const formData = new FormData(event.target);\n    const title = formData.get('title');\n    const content = formData.get('comment');\n    setComment({\n      \"content\": content,\n      \"title\": title,\n      \"move\": currentMove\n    });\n    console.log(content, title, comment);\n    fetch(postUrl, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // We should keep the fields consistent for managing this data later\n        title: comment.title,\n        content: comment.content,\n        move: comment.move\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(() => {\n      alert('You have been added to the system!');\n    }).catch(error => {\n      console.error(\"Failed to fetch:\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"/api/comment\",\n      onSubmit: handleSubmit,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        defaultValue: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"comment\",\n        defaultValue: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Comment:\", comment.comment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Title: \", comment.commentTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CommentSection, \"MxVKMJ8uBkupJxM+uJrrfeFkRhs=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentSection","currentMove","_s","comment","setComment","content","title","handleSubmit","event","preventDefault","postUrl","formData","FormData","target","get","console","log","fetch","method","headers","body","JSON","stringify","move","then","alert","catch","error","children","action","onSubmit","name","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","type","commentTitle","_c","$RefreshReg$"],"sources":["/Users/anansi/Workspace/personal/chesschat/src/client/src/components/comments.js"],"sourcesContent":["import { useState } from \"react\"\n\nfunction CommentSection(currentMove) {\n    const [comment, setComment] = useState({ \"content\": content, \"title\": title, \"move\": currentMove });\n    // state object needs to match the same structure as the object you are trying to save to state\n    \n    function handleSubmit(event) {\n        event.preventDefault()\n        const postUrl = 'http://localhost:3001/post'\n        const formData = new FormData(event.target)\n        const title = formData.get('title')\n        const content = formData.get('comment')\n\n  \n\n\n        setComment({ \"content\": content, \"title\": title, \"move\": currentMove })\n        \n        console.log(content, title, comment)\n        \n        fetch(postUrl, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ // We should keep the fields consistent for managing this data later\n                title: comment.title, \n                content: comment.content, \n                move: comment.move\n            }), \n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n        .then(()=>{\n            alert('You have been added to the system!');\n        })\n        .catch((error) => {\n            console.error(\"Failed to fetch:\", error);\n        });\n    }\n  \n    return (\n        <>  \n            <form action=\"/api/comment\" onSubmit={handleSubmit} method=\"POST\">\n                <input name=\"title\" defaultValue={\"title\"} />\n                <input name=\"comment\" defaultValue={\"comment\"} />\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n            <span>Comment:{comment.comment}</span>\n            <span>Title: {comment.commentTitle}</span>\n        </>\n    )\n     \n}\n\nexport default CommentSection\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}