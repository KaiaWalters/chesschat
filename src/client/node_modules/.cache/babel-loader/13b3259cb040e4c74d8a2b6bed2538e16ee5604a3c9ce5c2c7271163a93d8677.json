{"ast":null,"code":"var _jsxFileName = \"/Users/anansi/Workspace/personal/chesschat/src/client/src/components/comments.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CommentSection({\n  currentMove\n}) {\n  _s();\n  const [comment, setComment] = useState({\n    comment: '',\n    commentTitle: ''\n  });\n  // state object needs to match the same structure as the object you are trying to save to state\n\n  function submitComment(event) {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const commentTitle = formData.get('title');\n    const comment = formData.get('comment');\n    console.log(`Title: ${commentTitle}, Comment: ${commentTitle}`);\n    setComment({\n      \"comment\": comment,\n      \"commentTitle\": commentTitle,\n      \"move\": currentMove\n    });\n    console.log(\"comment\", comment);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitComment,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        defaultValue: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"comment\",\n        defaultValue: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Comment:\", comment.comment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Title: \", comment.commentTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CommentSection, \"Da4bXXLGTyAxcsl+lMaiwGtHY6w=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentSection","currentMove","_s","comment","setComment","commentTitle","submitComment","event","preventDefault","formData","FormData","target","get","console","log","children","onSubmit","name","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/anansi/Workspace/personal/chesschat/src/client/src/components/comments.js"],"sourcesContent":["import { useState } from \"react\"\n\nfunction CommentSection({currentMove}) {\n    const [comment, setComment] = useState({ comment: '', commentTitle: '' });\n    // state object needs to match the same structure as the object you are trying to save to state\n    \n    function submitComment(event) {\n        event.preventDefault()\n        const formData = new FormData(event.target)\n        const commentTitle = formData.get('title')\n        const comment = formData.get('comment')\n        console.log(`Title: ${commentTitle}, Comment: ${commentTitle}`);\n        setComment({ \"comment\": comment, \"commentTitle\": commentTitle, \"move\": currentMove })\n        console.log(\"comment\",comment)\n    }\n  \n    return (\n        <>  \n            <form onSubmit={submitComment}>\n                <input name=\"title\" defaultValue={\"title\"} />\n                <input name=\"comment\" defaultValue={\"comment\"} />\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n\n            <span>Comment:{comment.comment}</span>\n            <span>Title: {comment.commentTitle}</span>\n        </>\n    )\n\n}\n\nexport default CommentSection"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,SAASC,cAAcA,CAAC;EAACC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC;IAAEQ,OAAO,EAAE,EAAE;IAAEE,YAAY,EAAE;EAAG,CAAC,CAAC;EACzE;;EAEA,SAASC,aAAaA,CAACC,KAAK,EAAE;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,KAAK,CAACI,MAAM,CAAC;IAC3C,MAAMN,YAAY,GAAGI,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC;IAC1C,MAAMT,OAAO,GAAGM,QAAQ,CAACG,GAAG,CAAC,SAAS,CAAC;IACvCC,OAAO,CAACC,GAAG,CAAC,UAAUT,YAAY,cAAcA,YAAY,EAAE,CAAC;IAC/DD,UAAU,CAAC;MAAE,SAAS,EAAED,OAAO;MAAE,cAAc,EAAEE,YAAY;MAAE,MAAM,EAAEJ;IAAY,CAAC,CAAC;IACrFY,OAAO,CAACC,GAAG,CAAC,SAAS,EAACX,OAAO,CAAC;EAClC;EAEA,oBACIN,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA;MAAMmB,QAAQ,EAAEV,aAAc;MAAAS,QAAA,gBAC1BlB,OAAA;QAAOoB,IAAI,EAAC,OAAO;QAACC,YAAY,EAAE;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CzB,OAAA;QAAOoB,IAAI,EAAC,SAAS;QAACC,YAAY,EAAE;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDzB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAEPzB,OAAA;MAAAkB,QAAA,GAAM,UAAQ,EAACZ,OAAO,CAACA,OAAO;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtCzB,OAAA;MAAAkB,QAAA,GAAM,SAAO,EAACZ,OAAO,CAACE,YAAY;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eAC5C,CAAC;AAGX;AAACpB,EAAA,CA3BQF,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AA6BvB,eAAeA,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}