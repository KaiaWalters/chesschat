{"ast":null,"code":"import { useState } from \"react\";\nimport Chess from \"chess.js\";\nlet [game, setGame] = useState(new Chess());\nfunction makeAMove(move) {\n  const gameCopy = {\n    ...game\n  };\n  const result = gameCopy.move(move);\n  setGame(gameCopy);\n  return result; // null if the move was illegal, the move object if the move was legal\n}\nfunction makeRandomMove() {\n  const possibleMoves = game.moves();\n  if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over\n  const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n  makeAMove(possibleMoves[randomIndex]);\n}\nfunction onDrop(sourceSquare, targetSquare) {\n  const move = makeAMove({\n    from: sourceSquare,\n    to: targetSquare,\n    promotion: \"q\" // always promote to a queen for example simplicity\n  });\n  if (move === null) return false;\n\n  // illegal move\n  setTimeout(makeRandomMove, 200);\n  parentCallback(move);\n  return true;\n}\nexport { onDrop };\nexport default game;","map":{"version":3,"names":["useState","Chess","game","setGame","makeAMove","move","gameCopy","result","makeRandomMove","possibleMoves","moves","game_over","in_draw","length","randomIndex","Math","floor","random","onDrop","sourceSquare","targetSquare","from","to","promotion","setTimeout","parentCallback"],"sources":["/Users/anansi/Workspace/personal/chesschat/src/client/src/logic/chessLogic.js"],"sourcesContent":["import { useState } from \"react\";\nimport Chess from \"chess.js\";\n\nlet [game, setGame] = useState(new Chess());\n\nfunction makeAMove(move) {\n  const gameCopy = { ...game };\n  const result = gameCopy.move(move)\n  setGame(gameCopy);\n  return result; // null if the move was illegal, the move object if the move was legal\n\n}\n\nfunction makeRandomMove() {\n  const possibleMoves = game.moves();\n  if (game.game_over() || game.in_draw() || possibleMoves.length === 0)\n    return; // exit if the game is over\n  const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n\n  makeAMove(possibleMoves[randomIndex]);\n}\n\nfunction onDrop(sourceSquare, targetSquare) {\n    const move = makeAMove({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\",// always promote to a queen for example simplicity\n    });\n\n    if (move === null) return false;\n\n    // illegal move\n    setTimeout(makeRandomMove, 200);\n\n    parentCallback(move)\n\n    return true;\n  }\n\n\nexport { onDrop }\nexport default game\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,UAAU;AAE5B,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,IAAIC,KAAK,CAAC,CAAC,CAAC;AAE3C,SAASG,SAASA,CAACC,IAAI,EAAE;EACvB,MAAMC,QAAQ,GAAG;IAAE,GAAGJ;EAAK,CAAC;EAC5B,MAAMK,MAAM,GAAGD,QAAQ,CAACD,IAAI,CAACA,IAAI,CAAC;EAClCF,OAAO,CAACG,QAAQ,CAAC;EACjB,OAAOC,MAAM,CAAC,CAAC;AAEjB;AAEA,SAASC,cAAcA,CAAA,EAAG;EACxB,MAAMC,aAAa,GAAGP,IAAI,CAACQ,KAAK,CAAC,CAAC;EAClC,IAAIR,IAAI,CAACS,SAAS,CAAC,CAAC,IAAIT,IAAI,CAACU,OAAO,CAAC,CAAC,IAAIH,aAAa,CAACI,MAAM,KAAK,CAAC,EAClE,OAAO,CAAC;EACV,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,aAAa,CAACI,MAAM,CAAC;EAEpET,SAAS,CAACK,aAAa,CAACK,WAAW,CAAC,CAAC;AACvC;AAEA,SAASI,MAAMA,CAACC,YAAY,EAAEC,YAAY,EAAE;EACxC,MAAMf,IAAI,GAAGD,SAAS,CAAC;IACrBiB,IAAI,EAAEF,YAAY;IAClBG,EAAE,EAAEF,YAAY;IAChBG,SAAS,EAAE,GAAG,CAAC;EACjB,CAAC,CAAC;EAEF,IAAIlB,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;;EAE/B;EACAmB,UAAU,CAAChB,cAAc,EAAE,GAAG,CAAC;EAE/BiB,cAAc,CAACpB,IAAI,CAAC;EAEpB,OAAO,IAAI;AACb;AAGF,SAASa,MAAM;AACf,eAAehB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}